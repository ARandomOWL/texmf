
@TechReport{	  Dalalah,
  abstract	= {Bit-counting implementations are used to count the number
		  of 1 s in a given computer word. There are several
		  techniques to implement bit-counting operation. These
		  techniques are either so algorithms or specialized hardware
		  techniques. The hardware implementations requi hardware
		  supported in the processor or associated math co-processor.
		  The perform hardware-supported bit-counting was found to be
		  superior to most software implementati serial shifting). In
		  this paper, a new hardware implementation of bit-counting
		  routine is pr reduces the number of logic gates and the
		  delay in comparison with existing implemen performance of
		  the proposed hardware bit-counting implementations is
		  further inve evaluated.},
  author	= {Dalalah, Ahmed and Baba, Sami and Tubaishat, Abdallah},
  keywords	= {Bit-Counting,Bit-Parallelism,Counters,Popcount,Redundant
		  Cod},
  pages		= {118--128},
  title		= {{NEW HARDWARE ARCHITECTURE FOR BIT-COUNTING}}
}

@InProceedings{	  Fujino2002,
  abstract	= {This paper presents a new scheme for basic pattern-
		  matching application. The scheme is capable of (i)
		  determining whether the two bit-streams are identical
		  (complete match), and if not (ii) whether the Hamming
		  distance between them is larger than a given threshold
		  (near match). It efficiently exploits the "time-domain"
		  representation of binary values, and does not require
		  multi- bit addition/ comparison. Experimental comparisons
		  show that the scheme is very fast, dissipates less power
		  and yet more compact in implementation than the existing
		  designs. {\textcopyright} 2002 IEEE.},
  author	= {Fujino, Mitsumasa and Moshnyaga, Vastly G.},
  booktitle	= {Proc. IEEE Int. Conf. Electron. Circuits, Syst.},
  doi		= {10.1109/ICECS.2002.1046250},
  isbn		= {0780375963},
  pages		= {641--644},
  title		= {{An efficient Hamming distance comparator for low-power
		  applications}},
  volume	= {2},
  year		= {2002}
}

@Article{	  Parhami2009,
  abstract	= {New counting-based methods for comparing the Hamming
		  weight of a binary vector with a constant, as well as
		  comparing the Hamming weights of two input vectors, are
		  proposed. It is shown that the proposed comparators are
		  faster and simpler, both in asymptotic sense and for
		  moderate vector lengths, compared with the best available
		  fully digital designs. These speed and cost advantages
		  result from a more efficient population counting, as well
		  as the merger of counting and comparison operations, via
		  accumulative and up/down parallel counters.
		  {\textcopyright} 2009 IEEE.},
  author	= {Parhami, Behrooz},
  doi		= {10.1109/TCSII.2008.2010176},
  issn		= {15497747},
  journal	= {IEEE Trans. Circuits Syst. II Express Briefs},
  keywords	= {Column compression,Comparator,Hamming
		  distance,Multioperand addition,Parallel counter,Population
		  count},
  number	= {2},
  pages		= {167--171},
  title		= {{Efficient Hamming weight comparators for binary vectors
		  based on accumulative and up/down parallel counters}},
  volume	= {56},
  year		= {2009}
}

@Article{	  Piestrak2007,
  abstract	= {New comparators of the Hamming weight of binary vectors
		  built using threshold circuits are proposed. One version
		  compares the Hamming weight of a binary vector to a fixed
		  threshold, whereas the other compares the Hamming weights
		  of two independent vectors. Their applications include
		  digital neural networks, pattern matching and median/rank
		  filters.},
  author	= {Piestrak, S. J.},
  doi		= {10.1049/el:20070141},
  issn		= {00135194},
  journal	= {Electron. Lett.},
  number	= {11},
  pages		= {611--612},
  title		= {{Efficient Hamming weight comparators of binary vectors}},
  volume	= {43},
  year		= {2007}
}

@InProceedings{	  Ramanarayanan2008,
  abstract	= {This paper describes a unified PopCount/
		  BitScanForward/BitScanReverse datapath circuit designed for
		  2.1GHz operation with total power consumption of 6.5mW,
		  targeted for 65nm 64-bit microprocessor execution cores.
		  The unified datapath uses a hybrid 3:2 compressor-based
		  Wallace tree to count the number of '1's in the 64-bit
		  input, along with a novel encoding scheme that enables
		  reuse of the same tree to identify the bit-location of the
		  1st set bit when scanning the input in the forward and
		  reverse directions. This circuit thus combines the
		  functions of 3 separate units, enabling 26{\%} reduction in
		  total energy and 20{\%} lower area, while achieving
		  single-cycle latency {\&} throughput. {\textcopyright} 2008
		  IEEE.},
  author	= {Ramanarayanan, Rajaraman and Mathew, Sanu and Erraguntla,
		  Vasantha and Krishnamurthy, Ram and Gueron, Shay},
  booktitle	= {Proc. IEEE Int. Freq. Control Symp. Expo.},
  doi		= {10.1109/VLSI.2008.75},
  isbn		= {0769530834},
  pages		= {273--278},
  title		= {{A 2.1GHz 6.5mW 64-bit unified PopCount/BitScan datapath
		  unit for 65nm high-performance microprocessor execution
		  cores}},
  year		= {2008}
}

@Article{	  Sklyarov2016,
  abstract	= {Popcount computations are widely used in such areas as
		  combinatorial search, data processing, statistical
		  analysis, and bio-and chemical informatics. In many
		  practical problems the size of initial data is very large
		  and increase in throughput is important. The paper suggests
		  two types of hardware accelerators that are (1) designed in
		  FPGAs and (2) implemented in Zynq-7000 all programmable
		  systems-on-chip with partitioning of algorithms that use
		  popcounts between software of ARM Cortex-A9 processing
		  system and advanced programmable logic. A three-level
		  system architecture that includes a general-purpose
		  computer, the problem-specific ARM, and reconfigurable
		  hardware is then proposed. The results of experiments and
		  comparisons with existing benchmarks demonstrate that
		  although throughput of popcount computations is increased
		  in FPGA-based designs interacting with general-purpose
		  computers, communication overheads (in experiments with PCI
		  express) are significant and actual advantages can be
		  gained if not only popcount but also other types of
		  relevant computations are implemented in hardware. The
		  comparison of software/hardware designs for Zynq-7000 all
		  programmable systems-on-chip with pure software
		  implementations in the same Zynq-7000 devices demonstrates
		  increase in performance by a factor ranging from 5 to 19
		  (taking into account all the involved communication
		  overheads between the programmable logic and the processing
		  systems).},
  author	= {Sklyarov, Valery and Skliarova, Iouliia and Silva,
		  Jo{\~{a}}o},
  doi		= {10.1155/2016/8972065},
  title		= {{On-Chip Reconfigurable Hardware Accelerators for Popcount
		  Computations}},
  url		= {http://dx.doi.org/10.1155/2016/8972065},
  year		= {2016}
}
