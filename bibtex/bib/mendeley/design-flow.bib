
@Article{	  Furey,
  abstract	= {| Much of the current research on design meth-ods for
		  asynchronous systems relies on process alge-bras JUY93],
		  trace theory Dil89], or Petri nets CKK + 96] among others
		  Hau93], which are found to be eeective for many diicult
		  high performance control and communica-tions applications.
		  The work described in this presenta-tion is based on the
		  premise that an alternative theoretical foundation and
		  speciication formalism would be more ap-propriate for
		  datapath intensive applications such as signal processing.
		  A working software tool for automated synthe-sis and
		  simulation of data path circuits from a high level
		  functional speciication is described. I. Motivation One of
		  the often quoted advantages for asynchronous de-sign is the
		  modularity enabled by self timed data commu-nications.
		  Provided that two modules adhere to a common signaling
		  protocol, they can reliably cooperate regardless of their
		  particular operating speeds. Whereas suitable
		  com-munications protocols can guarantee that data transfers
		  are reliable, they certainly do not guarantee that the
		  par-ticular data transfers taking place will correctly
		  implement some desired algorithm. Taking the example of a
		  nite impulse response (FIR) lter, we would probably nd the
		  initial, informal specii-cation to be something along the
		  lines of an equation such as y t =},
  author	= {Furey, Dennis},
  title		= {{High Level Asynchronous Datapath Design}},
  url		= {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.36.8072{\&}rep=rep1{\&}type=pdf}
}

@Article{	  Parsan2014,
  author	= {Parsan, Farhad A. and Al-Assadi, Waleed K. and Smith,
		  Scott C.},
  doi		= {10.1109/TVLSI.2012.2231889},
  issn		= {1063-8210},
  journal	= {IEEE Trans. Very Large Scale Integr. Syst.},
  month		= jan,
  number	= {1},
  pages		= {99--112},
  title		= {{Gate Mapping Automation for Asynchronous NULL Convention
		  Logic Circuits}},
  url		= {http://ieeexplore.ieee.org/document/6478840/},
  volume	= {22},
  year		= {2014}
}

@Article{	  Sacker2004,
  abstract	= {Behavioral synthesis of synchronous systems is a well
		  established and researched area. The transformation of
		  behavioral description into a datapath and control graph,
		  and hence, to a structural realization usually requires
		  three fundamental steps: 1) scheduling (the mapping of
		  behavioral operations onto time slots); 2) allocation (the
		  mapping of the behavioral operations onto abstract
		  functional units); and 3) binding (the mapping of the
		  functional units onto physical cells). Optimization is
		  usually achieved by intelligent manipulation of these three
		  steps in some way. Key to the operation of such a system is
		  the (automatically generated) control graph, which is
		  effectively a complex sequence generator controlling the
		  passage of data through the system in time to some
		  synchronizing clock. The maximum clock speed is dictated by
		  the slowest time slot. (This is the timeslot containing the
		  longest combinational logic delay.) Timeslots containing
		  quicker (less) logic will effectively waste time: the
		  output of the combinational logic in the state will have
		  settled long before the registers reading the data are
		  enabled. If we allow the state to change as soon as the
		  data is ready, by introducing the concepts of " ready " and
		  " acknowledge, " the control graph becomes a disjoint set
		  of single-state machines—it effectively disappears, with
		  the consequence that the timeslot–timeslot transitions
		  become self controlling. Having removed the necessity for
		  the timeslots to be of equal duration the system becomes
		  selftiming: asynchronous. This paper describes a behavioral
		  asynchronous synthesis system based on this concept that
		  takes as input an algorithmic description of a design and
		  produces an asynchronous structural implementation. Several
		  example systems are synthesized both synchronously and
		  asynchronously (with no modification to the high level
		  de-scription). In keeping with the well-established
		  observation that asynchronous systems operate at average
		  case time complexity rather than worse case, the
		  asynchronous structures usually operate some 30{\%} faster
		  than their synchronous counterparts, although interesting
		  counterexamples are observed.},
  author	= {Sacker, M. and Brown, A.D. and Rushton, A.J. and Wilson,
		  P.R.},
  doi		= {10.1109/TVLSI.2004.832944},
  issn		= {1063-8210},
  journal	= {IEEE Trans. Very Large Scale Integr. Syst.},
  keywords	= {Index Terms—Asynchronous synthesis,behavioral
		  synthesis},
  month		= sep,
  number	= {9},
  pages		= {978--994},
  title		= {{A Behavioral Synthesis System for Asynchronous
		  Circuits}},
  url		= {http://ieeexplore.ieee.org/document/1327634/},
  volume	= {12},
  year		= {2004}
}

@InProceedings{	  Shang,
  author	= {Shang, D. and Xia, F. and Yakovlev, A.},
  booktitle	= {2002 IEEE Int. Symp. Circuits Syst. Proc. (Cat.
		  No.02CH37353)},
  doi		= {10.1109/ISCAS.2002.1010237},
  isbn		= {0-7803-7448-7},
  pages		= {III--369--III--372},
  publisher	= {IEEE},
  title		= {{Asynchronous circuit synthesis via direct translation}},
  url		= {http://ieeexplore.ieee.org/document/1010237/},
  volume	= {3}
}

@TechReport{	  Sokolovic,
  abstract	= {The lack of methods and tools for performance estimations
		  in asynchronous circuits is one of the main reasons why
		  this design methodology, beside its advantages, is still
		  unpopular among designers. Using a logic simulator it is
		  possible to efficiently estimate all worst-case path delays
		  in one asynchronous circuit, which can be crucial for
		  overcoming this problem. This paper describes a method for
		  statistical estimation of topological delays in
		  asynchronous circuits, based on the application of a VHDL
		  simulator. The method is verified on a set of chosen
		  asynchronous circuits and in compare with other similar
		  methods shows higher efficiency.},
  author	= {Sokolovi{\'{c}}, Miljana Lj. and Litovski, Van{\v{c}}o B.},
  title		= {{Statistical Timing Analysis of Asynchronous Circuits
		  Using Logic Simulator}},
  url		= {http://electronics.etfbl.net/journal/Vol13No1/xPaper_06.pdf}
}

@InProceedings{	  Yang2006,
  author	= {Yang, Jung-Lin and Tien, Hsu-Ching and Hsu, Chia-Ming and
		  Lin, Sung-Min},
  booktitle	= {APCCAS 2006 - 2006 IEEE Asia Pacific Conf. Circuits
		  Syst.},
  doi		= {10.1109/APCCAS.2006.342465},
  isbn		= {1-4244-0386-3},
  month		= dec,
  pages		= {1410--1413},
  publisher	= {IEEE},
  title		= {{High-Level Synthesis for Self-Timed Systems}},
  url		= {http://ieeexplore.ieee.org/document/4145665/},
  year		= {2006}
}
