
@Article{	  Amaru2013,
  abstract	= {Despite the impressive advance of logic synthesis during
		  the past decades, a general methodology capable of
		  efficiently synthesizing both control and datapath logic is
		  still missing. Indeed, while synthesis techniques for
		  random control logic (AND/OR-intensive) are well
		  established, no dominant method for automated synthesis of
		  datapath logic (XOR/MAJ-intensive) has yet emerged.
		  Recently, Binary Decision Diagrams (BDDs) have been adopted
		  to create an optimization system, named BDS, that supports
		  integrated synthesis of both AND/OR- and XOR-intensive
		  functions through functional logic decomposition on the BDD
		  structure. However, it does not support direct
		  decomposition and manipulation of majority logic which,
		  instead, is widely used in datapath circuits. In this
		  paper, we present the first BDD-based majority logic
		  decomposition method and a logic decomposition system,
		  BDS-MAJ, that enables efficient logic synthesis for both
		  random control and datapath circuits. Experimental results
		  show that logic synthesis based on BDSMAJ produces CMOS
		  circuits having on average 28.8{\%} and 26.4{\%} less area
		  and, at the same time, 12.8{\%} and 20.9{\%} smaller delay
		  with respect to academic ABC and BDS synthesis tools.
		  Compared to commercial Synopsys Design Compiler synthesis
		  tool, BDS-MAJ reduces on average the circuit area by
		  6.0{\%} and decreases the delay by 7.8{\%}.},
  address	= {New York, New York, USA},
  author	= {Amaru, L. and Gaillardon, P.-E. and {De Micheli},
		  Giovanni},
  doi		= {10.1145/2463209.2488792},
  isbn		= {9781450320719},
  issn		= {0738-100X},
  journal	= {Des. Autom. Conf. (DAC), 2013 50th ACM / EDAC / IEEE},
  keywords	= {AND-OR-intensive,BDD,BDD structure,BDD-based logic
		  synthesis tool,BDS-MAJ,CMOS circuit,CMOS logic
		  circuits,Data
		  structures,Decomposition,Delays,Equations,Logic
		  Synthesis,Logic functions,Majority
		  Logic,Optimization,Standards,XOR-MAJ-intensive,binary
		  decision diagram,datapath circuit,datapath logic,delay
		  circuit,delay circuits,functional logic decomposition,logic
		  design,optimisation,optimization system,random control
		  logic,synopsys design compiler synthesis tool},
  number	= {i},
  pages		= {1--6},
  publisher	= {ACM Press},
  title		= {{BDS-MAJ: A BDD-based logic synthesis tool exploiting
		  majority logic decomposition}},
  url		= {http://dl.acm.org/citation.cfm?doid=2463209.2488792},
  year		= {2013}
}

@Article{	  Amaru2014,
  abstract	= {In this paper, we present Majority-Inverter Graph (MIG), a
		  novel logic representation structure for efficient
		  optimization of Boolean functions. An MIG is a directed
		  acyclic graph consisting of three-input majority nodes and
		  regular/complemented edges. We show that MIGs include any
		  AND/OR/Inverter Graphs (AOIGs), containing also the
		  well-known AIGs. In order to support the natural
		  manipulation of MIGs, we introduce a new Boolean algebra,
		  based exclusively on majority and inverter operations, with
		  a complete axiomatic system. Theoretical results show that
		  it is possible to explore the entire MIG representation
		  space by using only five primitive transformation rules.
		  Such feature opens up a great opportunity for logic
		  optimization and synthesis. We showcase the MIG potential
		  by proposing a delay-oriented optimization technique.
		  Experimental results over MCNC benchmarks show that MIG
		  optimization reduces the number of logic levels by 18{\%},
		  on average, with respect to AIG optimization performed by
		  ABC academic tool. Employed in a traditional
		  optimization-mapping circuit synthesis flow, MIG
		  optimization enables an average reduction of {\{}22{\%},
		  14{\%}, 11{\%}{\}} in the estimated {\{}delay, area,
		  power{\}} metrics, before physical design, as compared to
		  academic/commercial synthesis flows.},
  address	= {New York, New York, USA},
  author	= {Amar{\'{u}}, Luca and Gaillardon, PE and Micheli, Giovanni
		  De},
  doi		= {10.1145/2593069.2593158},
  isbn		= {9781450327305},
  issn		= {0738100X},
  journal	= {Dac},
  keywords	= {boolean algebra,dag,logic synthesis,majority logic},
  pages		= {1--6},
  publisher	= {ACM Press},
  title		= {{Majority-inverter graph: a novel data-structure and
		  algorithms for efficient logic optimization}},
  url		= {http://dl.acm.org/citation.cfm?doid=2593069.2593158
		  http://dl.acm.org/citation.cfm?id=2593158},
  year		= {2014}
}

@Article{	  Bioch,
  author	= {Bioch, Jan and Ibaraki, Toshihide},
  title		= {{Minimum self-dual decompositions of positive dual-minor
		  Boolean functions}},
  url		= {http://ac.els-cdn.com/S0166218X99000967/1-s2.0-S0166218X99000967-main.pdf?_tid=019562be-712f-11e7-8b8f-00000aacb362{\&}acdnat=1500983416_7fc11c04f594552ef1c17df59d83d4de}
}

@Article{	  Bioch1995,
  abstract	= {A coterie, which is used to realize mutual exclusion in
		  distributed systems, is a family C of subsets such that any
		  pair of subsets in C has at least one element in common,
		  and such that no subset in C contains any other subset in
		  C. Associate with a family of subsets C a positive Boolean
		  function fc such that fc(x) = 1 if the Boolean vector x is
		  equal to or greater than the characteristic vector of some
		  subset in C, and 0 otherwise. It is known that C is a
		  coterie if and only if fc is dual-minor, and is a
		  non-dominated (ND) coterie if and only if fc is self-dual.
		  We study in this paper the decomposition of a positive
		  self-dual function into smaller positive self-dual
		  functions, as it explains how to represent and how to
		  construct the corresponding ND coterie. A key step is how
		  to decompose a positive dual-minor function f into a
		  conjunction of positive self-dual functions f1,f2,..., fk.
		  In addition to the general condition for this
		  decomposition, we clarify the condition for the
		  decomposition into two functions f1, and f2, and introduce
		  the concept of canonical decomposition. Then we present an
		  algorithm that determines a minimal canonical
		  decomposition, and a very simple algorithm that usually
		  gives a decomposition close to minimal. The decomposition
		  of a general self-dual function is also discussed.
		  {\textcopyright} 1995.},
  author	= {Bioch, Jan C and Ibaraki, Toshihide},
  doi		= {10.1016/0012-365X(94)00053-L},
  issn		= {0012365X},
  journal	= {Discrete Math.},
  keywords	= {Coteries,Decomposition of self-dual functions,Dual-minor
		  functions,Monotone Boolean functions,Mutual
		  exclusion,Positive Boolean functions,Self-dual functions},
  number	= {1-3},
  pages		= {23--46},
  title		= {{Decompositions of positive self-dual boolean functions}},
  url		= {http://ac.els-cdn.com/0012365X9400053L/1-s2.0-0012365X9400053L-main.pdf?_tid=78b4d7ac-6ae6-11e7-8a41-00000aab0f27{\&}acdnat=1500292556_1b3c5170745be92cd6a62360b2ccdc45},
  volume	= {140},
  year		= {1995}
}

@InProceedings{	  Chattopadhyay2016,
  abstract	= {A Majority-Inverter Graph (MIG) is a homogeneous logic
		  network, where each node represents the majority function.
		  Recently, a logic optimization package based on the MIG
		  data-structure, with 3-input majority node (M3) has been
		  proposed [2], [30]. It is demonstrated to have efficient
		  area-delay-power results compared to state-of-the-art logic
		  optimization packages. In this paper, the Boolean algebraic
		  transformations based on majority logic, i.e., majority
		  Boolean algebra is studied. In the first part of this
		  paper, we summarize a range of identities for majority
		  Boolean algebra with their corresponding proofs. In the
		  second part, we venture towards heterogeneous logic network
		  and provide reversible logic mapping of majority nodes.},
  author	= {Chattopadhyay, Anupam and Amaru, Luca and Soeken, Mathias
		  and Gaillardon, Pierre Emmanuel and {De Micheli},
		  Giovanni},
  booktitle	= {Proc. Int. Symp. Mult. Log.},
  doi		= {10.1109/ISMVL.2016.21},
  isbn		= {9781467394888},
  issn		= {0195623X},
  month		= may,
  pages		= {50--55},
  publisher	= {IEEE},
  title		= {{Notes on majority boolean algebra}},
  url		= {http://ieeexplore.ieee.org/document/7515521/},
  volume	= {2016-July},
  year		= {2016}
}

@Article{	  Crama1987,
  abstract	= {A monotonic Boolean function is regular if its variables
		  are naturally ordered by decreasing 'strength', so that
		  shifting to the right the non-zero entries of any binary
		  false point always yields another false point. Peled and
		  Simeone recently published a polynomial algorithm to
		  generate the maximal false points (MFP's) of a regular
		  function from a list of its minimal true points (MTP's).
		  Another efficient algorithm for this problem is presented
		  here, based on characterization of the MFP's of a regular
		  function in terms of its MTP's. This result is also used to
		  derive a new upper bound on the number of MFP's of a
		  regular function. {\textcopyright} 1987.},
  author	= {Crama, Y.},
  doi		= {10.1016/0166-218X(87)90056-4},
  issn		= {0166218X},
  journal	= {Discret. Appl. Math.},
  number	= {1},
  pages		= {79--85},
  title		= {{Dualization of regular Boolean functions}},
  url		= {http://ac.els-cdn.com/0166218X87900564/1-s2.0-0166218X87900564-main.pdf?_tid=49f187de-6baa-11e7-9d47-00000aab0f02{\&}acdnat=1500376659_f49c3bc86e6b2196caed4a15dfb9bba7},
  volume	= {16},
  year		= {1987}
}

@InProceedings{	  Ibaraki,
  author	= {Ibaraki, T. and Kameda, T.},
  booktitle	= {Proc. Third IEEE Symp. Parallel Distrib. Process.},
  doi		= {10.1109/SPDP.1991.218285},
  isbn		= {0-8186-2310-1},
  pages		= {150--157},
  publisher	= {IEEE Comput. Soc. Press},
  title		= {{Boolean theory of coteries}},
  url		= {http://ieeexplore.ieee.org/document/218285/}
}

@Article{	  Kameda1993,
  abstract	= {A coterie under a ground set U consists of subsets (called
		  quorums) of U such that anypair of quorums intersect with
		  each other. Nondominated (ND) coteries are of
		  particularinterest, since they are optimal in some sense.
		  By assigning a Boolean variable to eachelement in U, a
		  family of subsets of U is represented by a Boolean function
		  of thesevariables. The authors characterize the ND coteries
		  as exactly those families which canbe represented by
		  positive, self-dual functions. In this Boolean framework,
		  it is provedthat any function representing an ND coterie
		  can be decomposed into copies of thethree-majority
		  function, and this decomposition is representable as a
		  binary tree. It isalso shown that the class of ND coteries
		  proposed by D. Agrawal and A. El Abbadi (1989) is related
		  to a special case of the above binary decomposition, and
		  that the composition proposed by M.L. Neilsen and M. Mizuno
		  (1992) is closely related to the classical Ashenhurst
		  decomposition of Boolean functions. A number of other
		  results are also obtained. The compactness of the proofs of
		  most of these results indicates the suitability of Boolean
		  algebra for the analysis of coteries.},
  author	= {Kameda, Tiko},
  doi		= {10.1109/71.238300},
  issn		= {10459219},
  journal	= {IEEE Trans. Parallel Distrib. Syst.},
  keywords	= {Boolean algebra,Mutual exclusion,coteries,decomnosition of
		  Boolean functions,distributed systems,self-dual Boolean
		  functions},
  month		= jul,
  number	= {7},
  pages		= {779--794},
  title		= {{A Theory of Coteries: Mutual Exclusion in Distributed
		  Systems}},
  url		= {http://ieeexplore.ieee.org/document/238300/},
  volume	= {4},
  year		= {1993}
}

@InProceedings{	  Kim,
  author	= {Kim, S. and Sridhar, R.},
  booktitle	= {Proc. 1994 37th Midwest Symp. Circuits Syst.},
  doi		= {10.1109/MWSCAS.1994.519178},
  isbn		= {0-7803-2428-5},
  pages		= {7--10},
  publisher	= {IEEE},
  title		= {{Comparison of power consumption among asynchronous design
		  styles with their synchronous counterparts}},
  url		= {http://ieeexplore.ieee.org/document/519178/},
  volume	= {1}
}

@Article{	  Korshunov2003,
  author	= {Korshunov, A D},
  doi		= {10.1070/RM2003v058n05ABEH000667},
  issn		= {0036-0279},
  journal	= {Russ. Math. Surv.},
  month		= oct,
  number	= {5},
  pages		= {929--1001},
  publisher	= {IOP Publishing},
  title		= {{Monotone Boolean functions}},
  url		= {http://stacks.iop.org/0036-0279/58/i=5/a=R02?key=crossref.82c775142e0134a946cc3a6e7482a7ef},
  volume	= {58},
  year		= {2003}
}

@InProceedings{	  Muroga1961,
  author	= {Muroga, Saburo},
  booktitle	= {2nd Annu. Symp. Switch. Circuit Theory Log. Des. (SWCT
		  1961)},
  doi		= {10.1109/FOCS.1961.17},
  pages		= {39--46},
  publisher	= {IEEE},
  title		= {{Functional forms of majority functions and a necessary
		  and sufficient condition for their realizability}},
  url		= {http://ieeexplore.ieee.org/document/5397302/},
  year		= {1961}
}

@Article{	  Muroga1964,
  author	= {Muroga, Saburo},
  doi		= {10.1109/TCOME.1964.6539494},
  issn		= {0536-1532},
  journal	= {IEEE Trans. Commun. Electron.},
  month		= sep,
  number	= {74},
  pages		= {474--486},
  title		= {{Functional forms of dual-comparable functions and a
		  necessary and sufficient condition for readability of a
		  majority function}},
  url		= {http://ieeexplore.ieee.org/document/6539494/},
  volume	= {83},
  year		= {1964}
}

@InProceedings{	  Obridko,
  author	= {Obridko, I. and {Ran Ginosar}},
  booktitle	= {Proc. 2004 11th IEEE Int. Conf. Electron. Circuits Syst.
		  2004. ICECS 2004.},
  doi		= {10.1109/ICECS.2004.1399640},
  isbn		= {0-7803-8715-5},
  pages		= {164--167},
  publisher	= {IEEE},
  title		= {{Low energy asynchronous adders}},
  url		= {http://ieeexplore.ieee.org/document/1399640/}
}

@InProceedings{	  Obridkoa,
  annote	= {Reviews FA architectures with dual-rail carry and
		  single-rail sum.},
  author	= {Obridko, I. and Ginosar, R.},
  booktitle	= {2005 IEEE Int. Symp. Circuits Syst.},
  doi		= {10.1109/ISCAS.2005.1465816},
  isbn		= {0-7803-8834-8},
  pages		= {5238--5241},
  publisher	= {IEEE},
  title		= {{Low Energy Asynchronous Architectures}},
  url		= {http://ieeexplore.ieee.org/document/1465816/}
}

@InProceedings{	  Park2016,
  author	= {Park, Heechun and Kim, Taewhan},
  booktitle	= {2016 IEEE Comput. Soc. Annu. Symp. VLSI},
  doi		= {10.1109/ISVLSI.2016.29},
  isbn		= {978-1-4673-9039-2},
  month		= jul,
  pages		= {47--52},
  publisher	= {IEEE},
  title		= {{Synthesizing Asynchronous Circuits toward Practical
		  Use}},
  url		= {http://ieeexplore.ieee.org/document/7560171/},
  year		= {2016}
}

@InProceedings{	  Pfander,
  abstract	= {In this paper, a multiplexer-based concept for creating a
		  run-time con-figurable array of multipliers capable of
		  accommodating different input data word lengths is
		  presented. In our approach, each element of a m 1 × m 2
		  multiplier ar-ray is a parallel-parallel multiplier itself,
		  each again comprising a number of basic arithmetic
		  primitive cells and featuring multiplexers as controllable
		  interconnects. Also, we distinguish between multiplier
		  elements for unsigned and signed num-bers which differ in
		  algorithm and design. Diverse architectures are being
		  reviewed and an estimate of hardware complexity and area
		  consumption is given.},
  author	= {Pf{\"{a}}nder, Oliver A and Hacker, Roland and Pfleiderer,
		  Hans-J{\"{o}}rg},
  booktitle	= {Int. Conf. F. Program. Log. Appl.},
  title		= {{A Multiplexer-Based Concept for Reconfigurable Multiplier
		  Arrays}},
  url		= {https://link.springer.com/content/pdf/10.1007{\%}2F978-3-540-30117-2_103.pdf}
}

@PhDThesis{	  Sjalander2006,
  author	= {Sj{\"{a}}lander, Magnus},
  school	= {Chalmers University of Technology},
  title		= {{Efficient Reconfigurable Multipliers Based on the
		  Twin-Precision Technique}},
  year		= {2006}
}

@Article{	  Sok2012,
  author	= {Sok, Lin and Sol{\'{e}}, Patrick},
  doi		= {10.1007/978-3-642-31662-3},
  title		= {{On Formally Self-dual Boolean Functions in 2, 4 and 6
		  Variables}},
  url		= {http://hal.upmc.fr/hal-00786336
		  https://www.researchgate.net/profile/Patrick_Sole/publication/268072512_On_Formally_Self-dual_Boolean_Functions_in_24_and_6_Variables/links/55ffffe608aeba1d9f842fe3.pdf},
  volume	= {73691007},
  year		= {2012}
}

@TechReport{	  Sokolov2011a,
  abstract	= {Power proportionality becomes an important aspect of
		  computation under unpredictable energy supply, e.g. if the
		  energy is being scavenged from the environment and its
		  income varies significantly during the computation process.
		  It is advantageous to build the computational load of
		  energy harvesting electronics in such a way that it
		  continues the operation even in energy deficient
		  conditions, possibly degrading the Quality of Service
		  (QoS). In this work we studied two possibilities for
		  trading the QoS for energy consumption: by changing the
		  computation speed and by adjusting the computation
		  precision.},
  author	= {Sokolov, Danil and Yakovlev, Alex},
  title		= {{Quality of Service in Power Proportional Computing
		  Quality of Service in Power Proportional Computing}},
  url		= {http://async.org.uk/tech-reports/NCL-EECE-MSD-TR-2011-171.pdf},
  year		= {2011}
}

@Article{	  Stephen2014,
  abstract	= {Monotone Boolean functions (MBFs) are Boolean functions
		  f:{\{}0,1{\}}n→{\{}0,1{\}} satisfying the monotonicity
		  condition x≤y⇒f(x)≤f(y) for any x,y∈{\{}0,1{\}}n.
		  The number of MBFs in n variables is known as the nth
		  Dedekind number. It is a longstanding computational
		  challenge to determine these numbers exactly: these values
		  are only known for n at most 8. Two monotone Boolean
		  functions are equivalent if one can be obtained from the
		  other by permuting the variables. The number of
		  inequivalent MBFs in n variables was known only for up to
		  n=6. In this paper we propose a strategy to count
		  inequivalent MBFs by breaking the calculation into parts
		  based on the profiles of these functions. As a result we
		  are able to compute the number of inequivalent MBFs in 7
		  variables. The number obtained is 490013148.},
  author	= {Stephen, Tamon and Yusun, Timothy},
  doi		= {10.1016/J.DAM.2013.11.015},
  issn		= {0166-218X},
  journal	= {Discret. Appl. Math.},
  month		= apr,
  pages		= {15--24},
  publisher	= {North-Holland},
  title		= {{Counting inequivalent monotone Boolean functions}},
  url		= {https://www.sciencedirect.com/science/article/pii/S0166218X13005611},
  volume	= {167},
  year		= {2014}
}

@InProceedings{	  Ueno2012,
  abstract	= {It is known that any self-dual Boolean function can be
		  de-composed into compositions of 3-bit majority functions.
		  In this paper, we define a notion of a ternary majority
		  formula, which is a ternary tree composed of nodes labeled
		  by 3-bit majority functions and leaves labeled by literals.
		  We study their complexity in terms of formula size. In
		  particular, we prove upper and lower bounds for ternary
		  majority for-mula size of several Boolean functions. To
		  devise a general method to prove the ternary majority
		  formula size lower bounds, we give an upper bound for the
		  largest separation between ternary majority formula size
		  and DeMorgan formula size.},
  author	= {Ueno, Kenya},
  booktitle	= {Lect. Notes Comput. Sci. (including Subser. Lect. Notes
		  Artif. Intell. Lect. Notes Bioinformatics)},
  doi		= {10.1007/978-3-642-32241-9_37},
  issn		= {03029743},
  pages		= {433--444},
  title		= {{Formula complexity of ternary majorities}},
  url		= {http://www.lab2.kuis.kyoto-u.ac.jp/~kenya/COCOON2012.pdf},
  volume	= {7434 LNCS},
  year		= {2012}
}
